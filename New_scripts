1. 
------ DORMANT ACCOUNTS (SCHEME CODES DEFINED)

SELECT
G.CIF_ID, g.ACCT_NAME, g.foracid ACCT_NUMBER, G.SOL_ID BRANCH, g.CLR_BAL_AMT BALANCE,g.SCHM_CODE,E.PREFERREDEMAIL EMAIL, E.PREFERREDPHONE PHONE, E. SEGMENTCODE,E.RMNAME RM_NAME, g.LIEN_AMT
,C.ACCT_STATUS_DATE, g.LAST_TRAN_DATE
--g.schm_type,g.FREZ_CODE,g.ACCT_CLS_FLG,g.ACCT_OPN_DATE,g.ACCT_CLS_DATE
FROM vision.fin_gam g
LEFT JOIN edw.mdm_imke E ON E.CUSTOMERID = G.CIF_ID
LEFT JOIN TBAADM.CAM@FINACLE C ON C.ACID = G.ACID
--WHERE G.FREZ_CODE IN ('T', 'C', 'D')
WHERE G.SCHM_CODE IN ('ODF05', 'ODL03', 'ODL01', 'CAL01', 'CAL02', 'CAL31', 'CAL06', 'CAL30', 'ODL02', 'CAL12', 'ODL13', 'CAL08', 'CAL10', 'CAL03', 'SBL01', 'CAL04', 'ODL04',
'ODL14', 'ODL06', 'CAL14', 'CAL11', 'CAL13', 'CAL07')
AND C.ACCT_STATUS = 'D'
UNION ALL
SELECT
G.CIF_ID, g.ACCT_NAME, g.foracid ACCT_NUMBER, G.SOL_ID BRANCH, g.CLR_BAL_AMT BALANCE,g.SCHM_CODE,E.PREFERREDEMAIL EMAIL, E.PREFERREDPHONE PHONE, E. SEGMENTCODE,E.RMNAME RM_NAME, g.LIEN_AMT
,S.ACCT_STATUS_DATE, g.LAST_TRAN_DATE
--g.schm_type,g.FREZ_CODE,g.ACCT_CLS_FLG,g.ACCT_OPN_DATE,g.ACCT_CLS_DATE
FROM vision.fin_gam g
LEFT JOIN edw.mdm_imke E ON E.CUSTOMERID = G.CIF_ID
LEFT JOIN TBAADM.SMT@FINACLE S ON S.ACID = G.ACID
--WHERE G.FREZ_CODE IN ('T', 'C', 'D')
WHERE G.SCHM_CODE IN ('ODF05', 'ODL03', 'ODL01', 'CAL01', 'CAL02', 'CAL31', 'CAL06', 'CAL30', 'ODL02', 'CAL12', 'ODL13', 'CAL08', 'CAL10', 'CAL03', 'SBL01', 'CAL04', 'ODL04',
'ODL14', 'ODL06', 'CAL14', 'CAL11', 'CAL13', 'CAL07')
AND S.ACCT_STATUS = 'D'
;

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.

------FREQUENCY OF CUSTOMER PAYMENTS (SCHEME CODES DEFINED)
------THIS ONE SUMMARISES FREQUENCY OF CUSTOMER PAYMENTS AT DIFFERENT SHOPPING POINTS; USED TO HIGHLIGHT WHERE A CUSTOMER SHOPS MORE

WITH CUSTOMER AS
(
SELECT
G.ACID, HI.CIF_ID, HI.FORACID ACCOUNT_NO,HI.ACCT_NAME, HI.TRAN_DATE ,HI.ELEMENTS PMT_TYPE, HI.SCHM_CODE, HI.TRAN_DESC, HI.TRAN_PARTICULAR, HI.TRAN_RMKS, HI.REMARKS,HI.TRAN_ID, HI.TRAN_AMT AMOUNT, HI.TRAN_CRNCY_CODE
FROM EDW.HTD_ABCVSBRANCH_DETAIL_HIST HI
LEFT JOIN TBAADM.GAM@FINACLE G ON (G.CUST_ID = HI.CUST_ID AND G.FORACID = HI.FORACID)
WHERE TO_CHAR(HI.TRAN_DATE, 'YYYYMMDD') >='20221001'
--AND G.CUST_ID IS NOT NULL
--AND (HI.SCHM_CODE LIKE 'CAL%' OR HI.SCHM_CODE LIKE 'ODL%' OR HI.SCHM_CODE LIKE 'SBL%')
--AND (HI.SCHM_CODE NOT LIKE 'CAL25' OR HI.SCHM_CODE NOT LIKE 'CAL04' OR HI.SCHM_CODE NOT LIKE 'CAL05' OR HI.SCHM_CODE NOT LIKE 'CAL15' OR HI.SCHM_CODE NOT LIKE 'CAL16' OR HI.SCHM_CODE NOT LIKE 'CAL17' OR HI.SCHM_CODE NOT LIKE 'CAL18' OR HI.SCHM_CODE NOT LIKE 'CAL19' OR HI.SCHM_CODE NOT LIKE 'CAL20' OR HI.SCHM_CODE NOT LIKE 'CAL21' OR HI.SCHM_CODE NOT LIKE 'CAL22' OR HI.SCHM_CODE NOT LIKE 'CAL23' OR HI.SCHM_CODE NOT LIKE 'CAL24'OR HI.SCHM_CODE NOT LIKE 'CAL26' OR HI.SCHM_CODE NOT LIKE 'CAL27' OR HI.SCHM_CODE NOT LIKE 'CAL28' OR HI.SCHM_CODE NOT LIKE 'CAL29')
AND HI.PART_TRAN_TYPE = 'D'
AND HI.PART_TRAN_SRL_NUM = 1
--AND G.ACID IN ('IM21043385','IM21043369')
AND HI.FORACID = '00100010311201'
),
BALANCE AS
(
SELECT A.ACID, A.AVG_BAL,
(CASE WHEN (AVG_BAL) <= 100000 THEN '<100K'
        WHEN (AVG_BAL) BETWEEN 100001 AND 500000 THEN '100K-500K'
        WHEN (AVG_BAL) BETWEEN 500001 AND 1000000 THEN '500K - 1M'
        ELSE '>1M' END) AVG_BAL_RANGE
FROM
(
    SELECT ACID, AVG(TRAN_DATE_BAL) AVG_BAL
    FROM TBAADM.EAB@FINACLE
    WHERE TO_CHAR(EOD_DATE, 'YYYYMMDD') >= '20221001'
    GROUP BY ACID
)A
),
FREQUENCY AS
(
SELECT A.*
FROM
(
SELECT CIF_ID,ACID, ACCOUNT_NO, TRAN_PARTICULAR,
COUNT(TRAN_PARTICULAR) FREQUENCY,
SUM(AMOUNT) as TOTAL_TRAN_AMOUNT, STATS_MODE(TRAN_PARTICULAR) SHOPPING_POINT,
STATS_MODE(PMT_TYPE) PMT_TYPE,
STATS_MODE(SCHM_CODE) SCHM_CODE,
RANK() OVER (PARTITION BY CIF_ID ORDER BY COUNT(TRAN_PARTICULAR) DESC) RANKING
--CASE WHEN MODE(TRAN_PARTICULAR) THEN TRAN_PARTICULAR END SHOPPING_POINT
FROM CUSTOMER
GROUP BY CIF_ID,TRAN_PARTICULAR, ACID, ACCOUNT_NO
)
A
WHERE A.RANKING = 1
)
SELECT DISTINCT F.CIF_ID,F.ACID,F.ACCOUNT_NO,
(LISTAGG(F.TRAN_PARTICULAR, '|') WITHIN GROUP (ORDER BY F.CIF_ID)) AS TRAN_PARTICULAR,
(LISTAGG(F.SHOPPING_POINT, '|') WITHIN GROUP (ORDER BY F.CIF_ID)) AS SHOPPING_POINT,
(LISTAGG(F.PMT_TYPE, '|') WITHIN GROUP (ORDER BY F.CIF_ID)) AS PMT_TYPE,
(LISTAGG(F.SCHM_CODE, '|') WITHIN GROUP (ORDER BY F.CIF_ID)) AS SCHM_CODE,
SUM(F.FREQUENCY) TOTAL_FREQUENCY,
COUNT(SHOPPING_POINT) TOTAL_NO_OF_SHOPS,
(SUM(F.FREQUENCY)/COUNT(SHOPPING_POINT)) FREQUENCY_PER_SHOP,
SUM(F.TOTAL_TRAN_AMOUNT) TOTAL_TRAN_AMOUNT,
B.AVG_BAL as AVG_BAL, B.AVG_BAL_RANGE AVG_BAL_RANGE 
FROM FREQUENCY F
LEFT JOIN BALANCE B ON F.ACID = B.ACID
GROUP BY F.CIF_ID,F.ACID,F.ACCOUNT_NO, B.AVG_BAL, B.AVG_BAL_RANGE
;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3.

---------UNFUNDED ACCOUNTS (SCHEME CODES DEFINED)
WITH ACCOUNT AS
(
SELECT G.FORACID, G.ACCT_NAME, G.ACCT_OPN_DATE, G.LAST_TRAN_DATE, G.CIF_ID, G.ACID, G.ENTITY_CRE_FLG, G.ACCT_CLS_FLG, G.DEL_FLG, G.CUST_ID, G.SCHM_CODE, C.EMAIL, C.PHONE, C.SEGMENTATION_CLASS SEGMENT
FROM TBAADM.GAM@FINACLE G
LEFT JOIN TBAADM.CMG@FINACLE C ON C.CUST_ID = G.CUST_ID
WHERE TRUNC(ACCT_OPN_DATE) >= '01-MAY-2022'
AND G.SCHM_CODE IN ('CAL30', 'CAL31', 'ODL13','ODL14')
AND G.LAST_TRAN_DATE IS NULL AND G.ENTITY_CRE_FLG = 'Y' AND G.ACCT_CLS_FLG = 'N'
AND G.DEL_FLG = 'N' AND G.CUST_ID IS NOT NULL
--AND G.ACID = 'IM21761461'
),
NAME AS 
(
SELECT CUSTOMERID, RMNAME RM_NAME FROM EDW.MDM_IMKE
)
SELECT A.CIF_ID, A.FORACID ACCT_NO, A.ACCT_NAME, A.EMAIL, A.PHONE, A.SEGMENT,A.ACCT_OPN_DATE, A.LAST_TRAN_DATE, R.RM_NAME
FROM ACCOUNT A
LEFT JOIN NAME R ON R.CUSTOMERID = A.CIF_ID
;


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4. 

------ MPESA IMPACT ANALYSYS A: PRE AND POST WAIVER (BEFORE AND AFTER FEB 15 2023)

WITH CUSTOMER AS 
(
	SELECT CUSTOMERID, CUSTOMERNAME, SEGMENTCODE, SEGMENTNAME, RMNAME, CUSTOMERTYPE, CUSTOMERSTATUS,OTG_ACTIVE_STATUS,
		DT_OTG_REGISTRATION,DT_OTG_FIRST_LOGIN,DT_OTG_LAST_ACTIVE, DT_OTG_LAST_TRX, OTGREGISTERED, IS_BOUNDED
	FROM EDW.MDM_IMKE@EDWDBLNK
	--WHERE CUSTOMERID = '0339299'
),
BALANCE AS 
(
	SELECT ACID,
	(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) PRE_AVG_BAL,
	(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') > '20230215' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) POST_AVG_BAL,
	(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) PRE_MAX_BAL,
	(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') > '20230215' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) POST_MAX_BAL
	FROM TBAADM.EAB@FIN10
	WHERE TO_CHAR(EOD_DATE, 'YYYYMMDD') >= '20230101'
	--AND ACID IN ('IM21481888', 'IM100890', 'IM101726')
	GROUP BY ACID, EOD_DATE
),
OTG AS
(
	SELECT CUSTOMER_CIF, CUST_ACCOUNT_NO,PAYMENT_TYPE
	FROM IMKE.OTG_INDIVIDUAL_TRANSACTION_ANALYSIS@EDWDBLNK WHERE TO_CHAR(EXECUTION_DATE, 'YYYYMMDD') >='20230101'
	--AND CUSTOMER_CIF = '0339299'
	AND BANK_STATUS IN ('PROCESSED', 'SUCCESS', 'ACCEPTED')
),
MPESA_COUNT AS
(
	SELECT CUSTOMER_CIF,
		COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN 1 END)  PRE_MPESA_COUNT,
		COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') > '20230215' THEN 1 END)  POST_MPESA_COUNT
 	FROM IMKE.OTG_INDIVIDUAL_TRANSACTION_ANALYSIS@EDWDBLNK
 	WHERE TO_CHAR(EXECUTION_DATE, 'YYYYMMDD') >= '20230101' AND PAYMENT_TYPE LIKE 'MPESA_B2C' 
 	--AND CUSTOMER_CIF = '0339299'
 	AND BANK_STATUS IN ('PROCESSED', 'SUCCESS', 'ACCEPTED')
 	GROUP BY CUSTOMER_CIF
),
ALL_COUNT AS
(
	SELECT CUSTOMER_CIF,
		COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN 1 END)  PRE_TOTAL_COUNT,
		COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') > '20230215' THEN 1 END)  POST_TOTAL_COUNT,
		ROUND(COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN 1 END)*100/NULLIF(COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN 1 END),0),2) || '%' PRE_MPESA_PERCENTAGE,
		ROUND(COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') > '20230215' THEN 1 END)*100/NULLIF(COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') > '20230215' THEN 1 END),0),2) || '%' POST_MPESA_PERCENTAGE
	FROM IMKE.OTG_INDIVIDUAL_TRANSACTION_ANALYSIS@EDWDBLNK WHERE TO_CHAR(EXECUTION_DATE, 'YYYYMMDD') >='20230101'
	AND BANK_STATUS IN ('PROCESSED', 'SUCCESS', 'ACCEPTED')
	--AND CUSTOMER_CIF = '0339299'
	GROUP BY CUSTOMER_CIF
),
ACCOUNT AS
(
	SELECT CASE WHEN TO_CHAR(ACCT_OPN_DATE, 'YYYYMMDD') >= '20230215' THEN 'NTB' ELSE 'ETB' END STATUS,ACID,FORACID, ACCT_OPN_DATE, LAST_TRAN_DATE
	FROM TBAADM.GAM@FIN10
),
CREDIT AS
(
	SELECT ACID,TRAN_DATE,
		(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN AVG(NVL(TRAN_AMT,0)) END) PRE_AVG_CREDIT,
		(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') > '20230215' THEN AVG(NVL(TRAN_AMT,0)) END) POST_AVG_CREDIT,
		(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230215' THEN MAX(NVL(TRAN_AMT,0)) END) PRE_MAX_CREDIT,
		(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') > '20230215' THEN MAX(NVL(TRAN_AMT,0)) END) POST_MAX_CREDIT
	FROM TBAADM.HTD@FIN10
	WHERE TO_CHAR(TRAN_DATE, 'YYYYMMDD') >= '20230101'
	AND PART_TRAN_TYPE = 'C'
	--AND ACID IN ('IM21481888', 'IM100890', 'IM101726','IM21621731')
	GROUP BY ACID, TRAN_DATE
)
SELECT 
A.STATUS,C.OTGREGISTERED,C.CUSTOMERID, M.PRE_MPESA_COUNT,AL.PRE_TOTAL_COUNT,AL.PRE_MPESA_PERCENTAGE,MAX(B.PRE_MAX_BAL) PRE_MAX_BAL,AVG(B.PRE_AVG_BAL) PRE_AVG_BAL, MAX(CR.PRE_MAX_CREDIT) PRE_MAX_CREDIT , AVG(CR.PRE_AVG_CREDIT) PRE_AVG_CREDIT,
									   M.POST_MPESA_COUNT,AL.POST_TOTAL_COUNT,AL.POST_MPESA_PERCENTAGE,MAX(B.POST_MAX_BAL) POST_MAX_BAL,AVG(POST_AVG_BAL) POST_AVG_BAL, MAX(CR.POST_MAX_CREDIT) POST_MAX_CREDIT, AVG(CR.POST_AVG_CREDIT) POST_AVG_CREDIT
FROM CUSTOMER C
JOIN OTG O ON O.CUSTOMER_CIF = C.CUSTOMERID
JOIN ACCOUNT A ON A.FORACID = O.CUST_ACCOUNT_NO
JOIN BALANCE B ON B.ACID = A.ACID
JOIN MPESA_COUNT M ON M.CUSTOMER_CIF = C.CUSTOMERID
JOIN ALL_COUNT AL ON AL.CUSTOMER_CIF = C.CUSTOMERID
JOIN CREDIT CR ON CR.ACID  = B.ACID
WHERE TO_CHAR(A.LAST_TRAN_DATE, 'YYYYMMDD') >= '20230101'
--AND O.CUSTOMER_CIF = '0339299'
--AND A.SCHM_CODE IN ('CAL30', 'CAL31')
GROUP BY A.STATUS,C.OTGREGISTERED,C.CUSTOMERID, M.PRE_MPESA_COUNT,AL.PRE_TOTAL_COUNT,AL.PRE_MPESA_PERCENTAGE, M.POST_MPESA_COUNT,AL.POST_TOTAL_COUNT,AL.POST_MPESA_PERCENTAGE
;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5. 

------ MPESA IMPACT ANALYSYS A: PRE AND POST WAIVER (MOM IMPACT)

WITH 
TARGET AS
(SELECT distinct(CUSTOMER_CIF) as CUSTOMER_CIF  
FROM IMKE.OTG_INDIVIDUAL_TRANSACTION_ANALYSIS@edwdblnk WHERE TO_CHAR(EXECUTION_DATE, 'YYYYMMDD') >='20230101'),
CUSTOMER AS 
(
SELECT CUSTOMERID, CUSTOMERNAME, SEGMENTCODE, SEGMENTNAME, RMNAME, CUSTOMERTYPE, CUSTOMERSTATUS,OTG_ACTIVE_STATUS,
DT_OTG_REGISTRATION,DT_OTG_FIRST_LOGIN,DT_OTG_LAST_ACTIVE, DT_OTG_LAST_TRX, OTGREGISTERED, IS_BOUNDED
FROM EDW.MDM_IMKE@edwdblnk e
WHERE CUSTOMERID IN (SELECT CUSTOMER_CIF FROM TARGET)
and e.SEGMENTCODE IN ('BL03','BL05')
),
BALANCE AS 
(
SELECT e.ACID,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230131' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) JAN_AVG_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230201' AND '20230228' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) FEB_AVG_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230301' AND '20230331' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) MAR_AVG_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230401' AND '20230430' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) APR_AVG_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230501' AND '20230531' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) MAY_AVG_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230601' AND '20230630' THEN AVG(NVL(TRAN_DATE_BAL,0)) END) JUN_AVG_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230131' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) JAN_MAX_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230201' AND '20230228' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) FEB_MAX_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230301' AND '20230331' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) MAR_MAX_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230401' AND '20230430' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) APR_MAX_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230501' AND '20230531' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) MAY_MAX_BAL,
(CASE WHEN TO_CHAR(EOD_DATE, 'YYYYMMDD') BETWEEN '20230601' AND '20230630' THEN MAX(NVL(TRAN_DATE_BAL,0)) END) JUN_MAX_BAL
FROM TBAADM.EAB@fin10 e
left join tbaadm.gam@fin10 g on e.ACID = g.ACID
where g.cif_id in (select CUSTOMERID from CUSTOMER)
and TO_CHAR(EOD_DATE, 'YYYYMMDD') >= '20230101'
--AND ACID IN ('IM21481888', 'IM100890', 'IM101726')
GROUP BY e.ACID, EOD_DATE
),
OTG AS
(
SELECT CUSTOMER_CIF, CUST_ACCOUNT_NO,PAYMENT_TYPE
FROM IMKE.OTG_INDIVIDUAL_TRANSACTION_ANALYSIS@edwdblnk 
WHERE CUSTOMER_CIF in (select CUSTOMERID from CUSTOMER)
AND TO_CHAR(EXECUTION_DATE, 'YYYYMMDD') >='20230101'
--AND CUSTOMER_CIF = '0339299'
AND BANK_STATUS IN ('PROCESSED', 'SUCCESS', 'ACCEPTED')
),
MPESA_COUNT AS
(
SELECT CUSTOMER_CIF,
COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230101' AND '20230131' THEN 1 END) JAN_MPESA_COUNT,
COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230201' AND '20230228' THEN 1 END) FEB_MPESA_COUNT,
COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230301' AND '20230331' THEN 1 END) MAR_MPESA_COUNT,
COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230401' AND '20230430' THEN 1 END) APR_MPESA_COUNT,
COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230501' AND '20230531' THEN 1 END) MAY_MPESA_COUNT,
COUNT(CASE WHEN PAYMENT_TYPE LIKE 'MPESA_B2C' AND TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230601' AND '20230630' THEN 1 END) JUN_MPESA_COUNT
FROM IMKE.OTG_INDIVIDUAL_TRANSACTION_ANALYSIS@edwdblnk
WHERE CUSTOMER_CIF in (select CUSTOMERID from CUSTOMER)
AND TO_CHAR(EXECUTION_DATE, 'YYYYMMDD') >= '20230101' AND PAYMENT_TYPE LIKE 'MPESA_B2C' 
--AND CUSTOMER_CIF = '0339299'
AND BANK_STATUS IN ('PROCESSED', 'SUCCESS', 'ACCEPTED')
GROUP BY CUSTOMER_CIF
),
ALL_COUNT AS
(
SELECT CUSTOMER_CIF,
COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230101' AND '20230131' THEN 1 END) JAN_TOTAL_COUNT,
COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230201' AND '20230228' THEN 1 END) FEB_TOTAL_COUNT,
COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230301' AND '20230331' THEN 1 END) MAR_TOTAL_COUNT,
COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230401' AND '20230430' THEN 1 END) APR_TOTAL_COUNT,
COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230501' AND '20230531' THEN 1 END) MAY_TOTAL_COUNT,
COUNT(CASE WHEN TO_CHAR(EXECUTION_DATE,'YYYYMMDD') BETWEEN '20230601' AND '20230630' THEN 1 END) JUN_TOTAL_COUNT
FROM IMKE.OTG_INDIVIDUAL_TRANSACTION_ANALYSIS@edwdblnk 
WHERE CUSTOMER_CIF in (select CUSTOMERID from CUSTOMER)
AND TO_CHAR(EXECUTION_DATE, 'YYYYMMDD') >='20230101'
AND BANK_STATUS IN ('PROCESSED', 'SUCCESS', 'ACCEPTED')
--AND CUSTOMER_CIF = '0339299'
GROUP BY CUSTOMER_CIF
),
ACCOUNT AS
(
SELECT CASE WHEN TO_CHAR(ACCT_OPN_DATE, 'YYYYMMDD') >= '20230215' THEN 'NTB' ELSE 'ETB' END STATUS,
ACID,FORACID, ACCT_OPN_DATE, LAST_TRAN_DATE
FROM TBAADM.GAM@fin10 g
where g.cif_id in (select CUSTOMERID from CUSTOMER)
),
CREDIT AS
(
SELECT h.ACID, g.cif_id,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230131' THEN AVG(NVL(TRAN_AMT,0)) END) JAN_AVG_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230201' AND '20230228' THEN AVG(NVL(TRAN_AMT,0)) END) FEB_AVG_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230301' AND '20230331' THEN AVG(NVL(TRAN_AMT,0)) END) MAR_AVG_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230401' AND '20230430' THEN AVG(NVL(TRAN_AMT,0)) END) APR_AVG_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230501' AND '20230531' THEN AVG(NVL(TRAN_AMT,0)) END) MAY_AVG_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230601' AND '20230630' THEN AVG(NVL(TRAN_AMT,0)) END) JUN_AVG_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230101' AND '20230131' THEN MAX(NVL(TRAN_AMT,0)) END) JAN_MAX_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230201' AND '20230228' THEN MAX(NVL(TRAN_AMT,0)) END) FEB_MAX_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230301' AND '20230331' THEN MAX(NVL(TRAN_AMT,0)) END) MAR_MAX_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230401' AND '20230430' THEN MAX(NVL(TRAN_AMT,0)) END) APR_MAX_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230501' AND '20230531' THEN MAX(NVL(TRAN_AMT,0)) END) MAY_MAX_CREDIT,
(CASE WHEN TO_CHAR(TRAN_DATE, 'YYYYMMDD') BETWEEN '20230601' AND '20230630' THEN MAX(NVL(TRAN_AMT,0)) END) JUN_MAX_CREDIT
FROM TBAADM.HTD@fin10 h
left join tbaadm.gam@fin10 g on h.ACID = g.ACID
WHERE g.cif_id in (select CUSTOMERID from CUSTOMER)
and TO_CHAR(TRAN_DATE, 'YYYYMMDD') >= '20230101'
and g.schm_code in ('CAL02',
'CAL03',
'CAL04',
'CAL06',
'CAL07',
'CAL08',
'CAL09',
'CAL10',
'CAL11',
'CAL12',
'CAL13',
'CAL14',
'CAL25',
'CAL30',
'CAL31')
AND PART_TRAN_TYPE = 'C'
AND TRAN_PARTICULAR NOT LIKE '%REVERSAL%' AND TRAN_PARTICULAR NOT LIKE 'REV%'
--AND ACID IN ('IM21481888', 'IM100890', 'IM101726','IM21621731')
GROUP BY h.ACID, TRAN_DATE, g.cif_id
)

SELECT
A.STATUS,C.OTGREGISTERED,C.CUSTOMERID, M.JAN_MPESA_COUNT,M.FEB_MPESA_COUNT,
M.MAR_MPESA_COUNT, M.APR_MPESA_COUNT, M.MAY_MPESA_COUNT, M.JUN_MPESA_COUNT,
AL.JAN_TOTAL_COUNT, AL.FEB_TOTAL_COUNT, AL.MAR_TOTAL_COUNT, AL.APR_TOTAL_COUNT, AL.MAY_TOTAL_COUNT, AL.JUN_TOTAL_COUNT,
MAX(B.JAN_MAX_BAL) JAN_MAX_BAL, MAX(B.FEB_MAX_BAL) FEB_MAX_BAL, MAX(B.MAR_MAX_BAL) MAR_MAX_BAL, MAX(B.APR_MAX_BAL) APR_MAX_BAL,
MAX(B.MAY_MAX_BAL) MAY_MAX_BAL, MAX(B.JUN_MAX_BAL) JUN_MAX_BAL, 
AVG(B.JAN_AVG_BAL) JAN_AVG_BAL, AVG(B.FEB_AVG_BAL) FEB_AVG_BAL, AVG(B.MAR_AVG_BAL) MAR_AVG_BAL, AVG(B.APR_AVG_BAL) APR_AVG_BAL,
AVG(B.MAY_AVG_BAL) MAY_AVG_BAL, AVG(B.JUN_AVG_BAL) JUN_AVG_BAL, 
MAX(CR.JAN_MAX_CREDIT) JAN_MAX_CREDIT , MAX(CR.FEB_MAX_CREDIT) FEB_MAX_CREDIT, MAX(CR.MAR_MAX_CREDIT) MAR_MAX_CREDIT , 
MAX(CR.APR_MAX_CREDIT) APR_MAX_CREDIT , MAX(CR.MAY_MAX_CREDIT) MAY_MAX_CREDIT , MAX(CR.JUN_MAX_CREDIT) JUN_MAX_CREDIT,
AVG(CR.JAN_AVG_CREDIT) JAN_AVG_CREDIT , AVG(CR.FEB_AVG_CREDIT) FEB_AVG_CREDIT, AVG(CR.MAR_AVG_CREDIT) MAR_AVG_CREDIT , 
AVG(CR.APR_AVG_CREDIT) APR_AVG_CREDIT , AVG(CR.MAY_AVG_CREDIT) MAY_AVG_CREDIT , AVG(CR.JUN_AVG_CREDIT) JUN_AVG_CREDIT
FROM CUSTOMER C
LEFT JOIN OTG O ON O.CUSTOMER_CIF = C.CUSTOMERID
LEFT JOIN ACCOUNT A ON A.FORACID = O.CUST_ACCOUNT_NO
LEFT JOIN BALANCE B ON A.ACID = B.ACID
LEFT JOIN MPESA_COUNT M ON M.CUSTOMER_CIF = C.CUSTOMERID
LEFT JOIN ALL_COUNT AL ON AL.CUSTOMER_CIF = C.CUSTOMERID
LEFT JOIN CREDIT CR ON CR.cif_id = C.CUSTOMERID
WHERE 
TO_CHAR(A.LAST_TRAN_DATE, 'YYYYMMDD') >= '20230101'
GROUP BY A.STATUS,C.OTGREGISTERED,C.CUSTOMERID, M.JAN_MPESA_COUNT,M.FEB_MPESA_COUNT,
M.MAR_MPESA_COUNT, M.APR_MPESA_COUNT, M.MAY_MPESA_COUNT, M.JUN_MPESA_COUNT,
AL.JAN_TOTAL_COUNT, AL.FEB_TOTAL_COUNT, AL.MAR_TOTAL_COUNT, AL.APR_TOTAL_COUNT, AL.MAY_TOTAL_COUNT, AL.JUN_TOTAL_COUNT
;


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6. 

----CARDS ANALYSIS (CHECKS FOR CARDS TRANSACTION ACTIVITY BETWEEN NARADA AND WAY4 FOR UNIQUE CUSTOMER CARDS)

WITH CARD_TRAN AS
(
SELECT
A.CIF_ID, A.CUSTOMER_NAME, A.CARD_NO, A.CHANEL, A.CARD_CATEGORY_NAME, A.PRODUCT_NAME, A.TRANS_CURR, A.TRANS_AMOUNT,
A.SETTL_AMOUNT, A.TRANS_NAME, A.TRANS_DETAILS, A.TRANS_COUNTRY,A.TRANS_DATE
FROM
    (
    SELECT T.CLIENT_NUMBER CIF_ID, T.CUSTOMER_NAME, T.CARD_NO, T.CHANEL, T.CARD_CATEGORY_NAME,
    T.PRODUCT_NAME, T.TRANS_CURR, T.TRANS_AMOUNT, T.SETTL_AMOUNT, T.TRANS_NAME, T.TRANS_DETAILS, T.TRANS_COUNTRY,
    T.TRANS_DATE
    FROM (
    SELECT substr(cust.VISION_OUC,-3)BRANCH, DB.BRANCH_NAME, client_number, cust.customer_name, M.RMCODE RM_CODE,
    trans_date, substr(TARGET_NUMBER,1,6)||'xxxxxx'||substr(TARGET_NUMBER,13,4) CARD_NO ,
    decode( TRANS_TYPE, 5,'Retail',13,'ATM',50,'Unique',15,'Credit')chanel, name trans_name,
    trans_details, card_category_name, trans_country, target_country, return_code, RESP_TEXT, ret_ref_number, product_name, cust.vision_sbu SEGMENT,
    (select ao_name from VISION.account_officers@VISION2LNK ao where ao.country = 'KE' and ao.le_book = '01' and ao.account_officer = cust.account_officer )rm_name,
    (select name from dwh.dwd_currency@W4DMLNK where code=trans_curr and RECORD_STATE='A' )trans_curr, trans_amount,
    (select name from dwh.dwd_currency@W4DMLNK where code=settl_curr and RECORD_STATE='A' )settl_curr ,
    settl_amount
    FROM ANALYTICS.WAY4_TRANSACTIONS_STG@VISION2LNK trnx
    LEFT JOIN vision.customers@VISION2LNK cust on trnx.client_number=cust.customer_id and cust.country='KE' and cust.le_book='01'
    LEFT JOIN vision.customer_extras@VISION2LNK cust_ex on trnx.client_number=cust_ex.customer_id and cust_ex.country='KE' and cust_ex.le_book='01'
    LEFT JOIN EDW.MDM_IMKE M ON cust.CUSTOMER_ID = M.CUSTOMERID
    LEFT JOIN EDW.DIM_BRANCH DB ON substr(cust.VISION_OUC,-3) = DB.BRANCH_ID
    WHERE is_authorization ='Y'
    AND amnd_state = 'A'
    AND trans_type in ('5','13','15','50','11')
    AND request_category ='Q'
    AND amnd_state = 'A'
    AND con_cat = 'C'
    AND record_state = 'A'
    AND trunc(trans_date) BETWEEN '01-JUL-2020' AND SYSDATE-1) T
    GROUP BY T.CLIENT_NUMBER, T.CUSTOMER_NAME, T.CARD_NO, T.CHANEL, T.CARD_CATEGORY_NAME,  T
    .PRODUCT_NAME, T.TRANS_CURR, T.TRANS_AMOUNT, T.SETTL_AMOUNT, T.TRANS_NAME, T.TRANS_DETAILS, T.TRANS_COUNTRY,T.TRANS_DATE
    )A
--WHERE A.CIF_ID IN ('0024733')
GROUP BY A.CIF_ID, A.CUSTOMER_NAME, A.CARD_NO, A.CHANEL, A.CARD_CATEGORY_NAME, A.PRODUCT_NAME, A.TRANS_CURR, A.TRANS_AMOUNT, A.SETTL_AMOUNT, A.TRANS_NAME, A.TRANS_DETAILS, A.TRANS_COUNTRY,A.TRANS_DATE
),
AGG AS
(
SELECT A.* FROM
(
SELECT CIF_ID, CARD_NO,
        ROUND(SUM(SETTL_AMOUNT), 2) TOTAL_AMT, 
        SUM(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630'  THEN (SETTL_AMOUNT) END) PRE_TOTAL,
        SUM(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN (SETTL_AMOUNT) END)  POST_TOTAL,
        ROUND(AVG(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630'  THEN (SETTL_AMOUNT) END),2) PRE_AVG_AMT,
        ROUND(AVG(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN (SETTL_AMOUNT) END),2) POST_AVG_AMT,
         ROUND(MAX(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630'  THEN (SETTL_AMOUNT) END),2) PRE_MAX_AMT,
        ROUND(MAX(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN (SETTL_AMOUNT) END),2) POST_MAX_AMT,
         ROUND(MEDIAN(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630'  THEN (SETTL_AMOUNT) END),2) PRE_MEDIAN_AMT,
        ROUND(MEDIAN(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN (SETTL_AMOUNT) END),2) POST_MEDIAN_AMT,
         ROUND(MIN(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630'  THEN (SETTL_AMOUNT) END),2) PRE_MIN_AMT,
        ROUND(MIN(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN (SETTL_AMOUNT) END),2) POST_MIN_AMT,
        ROUND(SUM(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630'  THEN (SETTL_AMOUNT) END)*100/NULLIF(SUM(SETTL_AMOUNT),0),2) || '%' PRE_TOTAL_PERCENTAGE,
        ROUND(SUM(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN (SETTL_AMOUNT) END)*100/NULLIF(SUM(SETTL_AMOUNT),0),2) || '%' POST_TOTAL_PERCENTAGE,
        COUNT(SETTL_AMOUNT) TOTAL_COUNT,
        COUNT(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630' THEN 1 END)  PRE_COUNT,
        COUNT(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN 1 END)  POST_COUNT,
        ROUND(COUNT(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') <= '20210630' THEN 1 END)*100/NULLIF(COUNT(SETTL_AMOUNT),0),2) || '%' PRE_COUNT_PERCENTAGE,
        ROUND(COUNT(CASE WHEN TO_CHAR(TRANS_DATE,'YYYYMMDD') >= '20210701' THEN 1 END)*100/NULLIF(COUNT(SETTL_AMOUNT),0),2) || '%' POST_COUNT_PERCENTAGE
FROM CARD_TRAN
GROUP BY CIF_ID, CARD_NO
)A),
MAX_DATE AS
(
SELECT CIF_ID, CARD_NO, MAX(TRANS_DATE) MAX_TRANS_DATE FROM CARD_TRAN GROUP BY CIF_ID, CARD_NO
)
SELECT DISTINCT (CASE WHEN TO_CHAR(M.MAX_TRANS_DATE, 'YYYYMMDD') <= '20210630' THEN 'NARADA' ELSE 'WAY4' END) CARD_SYS, CT.CIF_ID,CT.CUSTOMER_NAME, CT.CARD_NO, CT.CARD_CATEGORY_NAME, CT.PRODUCT_NAME, A.TOTAL_AMT, (A.PRE_AVG_AMT), (A.POST_AVG_AMT), (A.PRE_MAX_AMT), (A.POST_MAX_AMT),(A.PRE_MEDIAN_AMT), (A.POST_MEDIAN_AMT),(A.PRE_MIN_AMT), (A.POST_MIN_AMT), PRE_TOTAL, POST_TOTAL, PRE_TOTAL_PERCENTAGE, POST_TOTAL_PERCENTAGE,
        A.TOTAL_COUNT, A.PRE_COUNT, A.POST_COUNT, A.PRE_COUNT_PERCENTAGE, A.POST_COUNT_PERCENTAGE
FROM CARD_TRAN CT
LEFT JOIN AGG A ON CT.CIF_ID = A.CIF_ID AND CT.CARD_NO = A.CARD_NO
LEFT JOIN MAX_DATE M ON CT.CIF_ID = M.CIF_ID AND CT.CARD_NO = M.CARD_NO
;


